apiVersion: appdynamics.com/v1alpha1
kind: Clusteragent
metadata:
  name: k8s-cluster-agent
  namespace: appdynamics
spec:
  nodePlacement:
    nodeSelector:
      matchLabels:
        node-role.kubernetes.io/infra: ""
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
  appName: "{{ clusterNameAppD }}"
  controllerUrl: "{{ controllerUrl }}"
  account: "{{ AppDAccountName }}"
  # docker image info
  image: "bsc-docker-all.artifactory.bsc.bscal.com/ice/appdynamics-cluster-agent:latest"
  serviceAccountName: appdynamics-cluster-agent
  logLevel: "DEBUG"
  logFileSizeMb: 20
  logFileBackups: 5
  stdoutLogging: "true"
  nsToMonitorRegex: {{ nsToMonitorRegex }}
  defaultAnalyticsHost: appd-infraviz.appdynamics.svc.cluster.local
  defaultAnalyticsPort: 9090
  defaultAnalyticsSslEnabled: true
  #imagePullSecrets:
  #  name: "regcred"
  resources:
    limits:
      cpu: {{ cpu_limits }}
      memory: {{ memory_limits }}
    requests:
      cpu: {{ cpu_requests }}
      memory: {{ memory_requests }}
  #auto instrumentation config
  instrumentationMethod: env
  nsToInstrumentRegex: {{ nsToInstrumentRegex }}
  defaultAppName: {{ defaultAppNameAppD }}
  numberOfTaskWorkers: 2
  #imagePullPolicy: Always
  #imagePullSecrets: local-secret
  resourcesToInstrument: [Deployment,StatefulSet]
  instrumentationRules:
    - namespaceRegex: {{ namespaceRegexAppD }}
  #   matchString: ^fad*
      appName: {{ appNameNameSpace }}
      customAgentConfig: "-Dorg.osgi.framework.bootdelegation=com.singularity.*"
      imageInfo:
        image: "bsc-docker-all.artifactory.bsc.bscal.com/ice/java-agent:latest"
        agentMountPath: /opt/appdynamics
        imagePullPolicy: Always
      runAsUser: 1000
      runAsGroup: 0
